CREATE TABLE vrniFlows.localTable 
( 
	`name` String, 
	`time` UInt64, 
	`modelkey_cid` UInt32, 
	`modelkey_otype` UInt16, 
	`modelkey_oid` UInt64, 
	`port.start` UInt32, 
	`port.end` UInt32, 
	`port.display` String, 
	`port.ianaName` String, 
	`port.ianaPortDisplay` String, 
	`Protocol` Enum8('TCP' = 0, 'UDP' = 1, 'OTHER' = 2), 
	`srcIP.prefixLength` UInt32, 
	`srcIP.ipAddress` UInt64, 
	`srcIP.netMask` String, 
	`srcIP.networkAddress` String, 
	`srcIP.cidr` String, 
	`srcIP.start` UInt64, 
	`srcIP.end` UInt64, 
	`srcIP.ipaddresstype` String, 
	`srcIP.privateaddress` UInt8, 
	`srcIP.Source` String, 
	`srcIP.Ipmetadata_domain` String, 
	`srcIP.Ipmetadata_isp` String, 
	`dstIP.prefixLength` UInt32, 
	`dstIP.ipAddress` UInt64, 
	`dstIP.netMask` String, 
	`dstIP.networkAddress` String, 
	`dstIP.cidr` String, 
	`dstIP.start` UInt64, 
	`dstIP.end` UInt64, 
	`dstIP.ipaddresstype` String, 
	`dstIP.privateaddress` UInt8, 
	`dstIP.Source` String, 
	`dstIP.Ipmetadata_domain` String, 
	`dstIP.Ipmetadata_isp` String, 
	`trafficType` Enum8('EAST_WEST_TRAFFIC' = 1, 'INTERNET_TRAFFIC' = 2), 
	`shared` UInt8, 
	`networkLayer` Enum8('UNKNOWN_LAYER' = 1, 'LAYER_2' = 2, 'LAYER_3' = 3), 
	`srcsubnet.prefixLength` UInt32, 
	`srcsubnet.ipAddress` String, 
	`srcsubnet.netMask` String, 
	`srcsubnet.networkAddress` String, 
	`srcsubnet.cidr` String, 
	`srcsubnet.start` UInt64, 
	`srcsubnet.end` UInt64, 
	`srcsubnet.ipaddresstype` String, 
	`srcsubnet.privateaddress` UInt8, 
	`srcsubnet.Source` String, 
	`srcsubnet.Ipmetadata_domain` String, 
	`srcsubnet.Ipmetadata_isp` String, 
	`dstsubnet.prefixLength` UInt32, 
	`dstsubnet.ipAddress` String, 
	`dstsubnet.netMask` String, 
	`dstsubnet.networkAddress` String, 
	`dstsubnet.cidr` String, 
	`dstsubnet.start` UInt64, 
	`dstsubnet.end` UInt64, 
	`dstsubnet.ipaddresstype` String, 
	`dstsubnet.privateaddress` UInt8, 
	`dstsubnet.Source` String, 
	`dstsubnet.Ipmetadata_domain` String, 
	`dstsubnet.Ipmetadata_isp` String, 
	`withinhost` UInt8, 
	`typetag` Array(String), 
	`__searchTags` Array(String), 
	`__related_entities` Array(String), 
	`srcVmTags` Array(String), 
	`dstVmTags` Array(String), 
	`attribute.reportedaction` Enum8('ALLOW' = 0, 'DENY' = 1, 'DROP' = 2, 'REJECT' = 3, 'REDIRECT' = 4, 'DONT_REDIRECT' = 5), 
	`attribute.reportedRuleId` String, 
	`attribute.collectorId` UInt32, 
	`attribute_rule.name` String, 
	`attribute_rule.modelkey_otype` UInt16, 
	`attribute_rule.modelkey_oid` UInt32, 
	`attribute_firewallmanager.name` String, 
	`attribute_firewallmanager.modelkey_otype` UInt16, 
	`attribute_firewallmanager.modelkey_oid` UInt32, 
	`activedpIds` UInt64, 
	`typeTagsPacked` String, 
	`protectionStatus` Enum8('UNKNOWN_STATUS' = 1, 'PROTECTED' = 2, 'ANY_ANY' = 3, 'UN_PROTECTED' = 4), 
	`flowAction` Enum8('ALLOW' = 0, 'DENY' = 1, 'DROP' = 2, 'REJECT' = 3, 'REDIRECT' = 4, 'DONT_REDIRECT' = 5), 
	`srcDnsInfo.ipDomain` UInt64, 
	`srcDnsInfo.ip` UInt64, 
	`srcDnsInfo.domainName` String, 
	`srcDnsInfo.hostName` String, 
	`srcDnsInfo.source` String, 
	`dstDnsInfo.ipDomain` UInt64, 
	`dstDnsInfo.ip` UInt64, 
	`dstDnsInfo.domainName` String, 
	`dstDnsInfo.hostName` String, 
	`dstDnsInfo.source` String, 
	`reporterEntity.collectorId` UInt32, 
	`reporterEntity_reporter.name` String, 
	`reporterEntity_reporter.modelkey_otype` UInt16, 
	`reporterEntity_reporter.modelkey_oid` UInt32, 
	`SchemaVersion` UInt32, 
	`lastActivity` UInt64, 
	`activity` UInt32, 
	`srck8Info.k8scollectorId` UInt32, 
	`srck8Info_k8sservice.name` String, 
	`srck8Info_k8sservice.modelkey_otype` UInt16, 
	`srck8Info_k8sservice.modelkey_oid` UInt64, 
	`srck8Info_k8scluster.name` String, 
	`srck8Info_k8scluster.modelkey_otype` UInt16, 
	`srck8Info_k8scluster.modelkey_oid` UInt64, 
	`srck8Info_k8snamespace.name` String, 
	`srck8Info_k8snamespace.modelkey_otype` UInt16, 
	`srck8Info_k8snamespace.modelkey_oid` UInt64, 
	`srck8Info_k8snode.name` String, 
	`srck8Info_k8snode.modelkey_otype` UInt16, 
	`srck8Info_k8snode.modelkey_oid` UInt64, 
	`dstk8Info.k8scollectorId` UInt32, 
	`dstk8Info_k8sservice.name` String, 
	`dstk8Info_k8sservice.modelkey_otype` UInt16, 
	`dstk8Info_k8sservice.modelkey_oid` UInt64, 
	`dstk8Info_k8scluster.name` String, 
	`dstk8Info_k8scluster.modelkey_otype` UInt16, 
	`dstk8Info_k8scluster.modelkey_oid` UInt64, 
	`dstk8Info_k8snamespace.name` String, 
	`dstk8Info_k8snamespace.modelkey_otype` UInt16, 
	`dstk8Info_k8snamespace.modelkey_oid` UInt64, 
	`dstk8Info_k8snode.name` String, 
	`dstk8Info_k8snode.modelkey_otype` UInt16, 
	`dstk8Info_k8snode.modelkey_oid` UInt64, 
	`srcIpEntity.name` String, 
	`srcIpEntity.modelkey_otype` UInt16, 
	`srcIpEntity.modelkey_oid` UInt64, 
	`dstIpEntity.name` String, 
	`dstIpEntity.modelkey_otype` UInt16, 
	`dstIpEntity.modelkey_oid` UInt64, 
	`srcNic.name` String, 
	`srcNic.modelkey_otype` UInt16, 
	`srcNic.modelkey_oid` UInt64, 
	`dstNic.name` String, 
	`dstNic.modelkey_otype` UInt16, 
	`dstNic.modelkey_oid` UInt64, 
	`srcVm.name` String, 
	`srcVm.modelkey_otype` UInt16, 
	`srcVm.modelkey_oid` UInt64, 
	`dstVm.name` String, 
	`dstVm.modelkey_otype` UInt16, 
	`dstVm.modelkey_oid` UInt64, 
	`srcSg.name` String, 
	`srcSg.modelkey_otype` UInt16, 
	`srcSg.modelkey_oid` UInt64, 
	`dstSg.name` String, 
	`dstSg.modelkey_otype` UInt16, 
	`dstSg.modelkey_oid` UInt64, 
	`srcIpSet.name` String, 
	`srcIpSet.modelkey_otype` UInt16, 
	`srcIpSet.modelkey_oid` UInt64, 
	`dstIpSet.name` String, 
	`dstIpSet.modelkey_otype` UInt16, 
	`dstIpSet.modelkey_oid` UInt64, 
	`srcSt.name` String, 
	`srcSt.modelkey_otype` UInt16, 
	`srcSt.modelkey_oid` UInt64, 
	`dstSt.name` String, 
	`dstSt.modelkey_otype` UInt16, 
	`dstSt.modelkey_oid` UInt64, 
	`srcL2Net.name` String, 
	`srcL2Net.modelkey_otype` UInt16, 
	`srcL2Net.modelkey_oid` UInt64, 
	`dstL2Net.name` String, 
	`dstL2Net.modelkey_otype` UInt16, 
	`dstL2Net.modelkey_oid` UInt64, 
	`srcGroup.name` String, 
	`srcGroup.modelkey_otype` UInt16, 
	`srcGroup.modelkey_oid` UInt64, 
	`dstGroup.name` String, 
	`dstGroup.modelkey_otype` UInt16, 
	`dstGroup.modelkey_oid` UInt64, 
	`srcCluster.name` String, 
	`srcCluster.modelkey_otype` UInt16, 
	`srcCluster.modelkey_oid` UInt64, 
	`dstCluster.name` String, 
	`dstCluster.modelkey_otype` UInt16, 
	`dstCluster.modelkey_oid` UInt64, 
	`srcRp.name` String, 
	`srcRp.modelkey_otype` UInt16, 
	`srcRp.modelkey_oid` UInt64, 
	`dstRp.name` String, 
	`dstRp.modelkey_otype` UInt16, 
	`dstRp.modelkey_oid` UInt64, 
	`srcDc.name` String, 
	`srcDc.modelkey_otype` UInt16, 
	`srcDc.modelkey_oid` UInt64, 
	`dstDc.name` String, 
	`dstDc.modelkey_otype` UInt16, 
	`dstDc.modelkey_oid` UInt64, 
	`srcHost.name` String, 
	`srcHost.modelkey_otype` UInt16, 
	`srcHost.modelkey_oid` UInt64, 
	`dstHost.name` String, 
	`dstHost.modelkey_otype` UInt16, 
	`dstHost.modelkey_oid` UInt64, 
	`svcEP.name` String, 
	`svcEP.modelkey_otype` UInt16, 
	`svcEP.modelkey_oid` UInt64, 
	`srcManagers.name` String, 
	`srcManagers.modelkey_otype` UInt16, 
	`srcManagers.modelkey_oid` UInt64, 
	`dstManagers.name` String, 
	`dstManagers.modelkey_otype` UInt16, 
	`dstManagers.modelkey_oid` UInt64, 
	`flowDomain.name` String, 
	`flowDomain.modelkey_otype` UInt16, 
	`flowDomain.modelkey_oid` UInt64, 
	`srcLookupDomain.name` String, 
	`srcLookupDomain.modelkey_otype` UInt16, 
	`srcLookupDomain.modelkey_oid` UInt64, 
	`dstLookupDomain.name` String, 
	`dstLookupDomain.modelkey_otype` UInt16, 
	`dstLookupDomain.modelkey_oid` UInt64, 
	`srcVpc.name` String, 
	`srcVpc.modelkey_otype` UInt16, 
	`srcVpc.modelkey_oid` UInt64, 
	`dstVpc.name` String, 
	`dstVpc.modelkey_otype` UInt16, 
	`dstVpc.modelkey_oid` UInt64, 
	`srcTransportNode.name` String, 
	`srcTransportNode.modelkey_otype` UInt16, 
	`srcTransportNode.modelkey_oid` UInt64, 
	`dstTransportNode.name` String, 
	`dstTransportNode.modelkey_otype` UInt16, 
	`dstTransportNode.modelkey_oid` UInt64, 
	`srcDvpg.name` String, 
	`srcDvpg.modelkey_otype` UInt16, 
	`srcDvpg.modelkey_oid` UInt64, 
	`dstDvpg.name` String, 
	`dstDvpg.modelkey_otype` UInt16, 
	`dstDvpg.modelkey_oid` UInt64, 
	`srcDvs.name` String, 
	`srcDvs.modelkey_otype` UInt16, 
	`srcDvs.modelkey_oid` UInt64, 
	`dstDvs.name` String, 
	`dstDvs.modelkey_otype` UInt16, 
	`dstDvs.modelkey_oid` UInt64, 
	`metricData.totalBytes` UInt32, 
	`metricData.srcBytes` UInt32, 
	`metricData.dstBytes` UInt32, 
	`metricData.totalPackets` UInt32, 
	`metricData.allowedSessionCount` UInt32, 
	`metricData.nsxTcpRtt_abs_max_ms` UInt64, 
	`metricData.nsxTcpRtt_abs_avg_ms` Int64 
) 
ENGINE = MergeTree() 
partition by toStartOfHour(toDateTime(time)) 
ORDER BY (toMinute(toDateTime(time))) 
